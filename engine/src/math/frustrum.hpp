#pragma once

#include "plane.hpp"

struct MAPI Frustrum
{
	enum Side {
		// Верх, низ, правая плоскость, левая плоскость, дальняя плоскость, ближняя плоскость
		Top, Bottom, Right, Left, Back, Front
	};

	// Сверху, снизу, справа, слева, далеко, близко
	Plane sides[6];

    /// @brief Создает и возвращает усеченную пирамиду на основе предоставленного положения, векторов направления, аспекта, поля зрения 
	/// и ближних/дальних плоскостей отсечения (обычно получаемых с камеры). Обычно используется для отсечения усеченной пирамиды.
    /// @param position константная ссылка на положение, которое будет использоваться.
    /// @param forward константная ссылка на прямой вектор, который будет использоваться.
    /// @param right константная ссылка на правый вектор, который будет использоваться.
    /// @param up константная ссылка на верхний вектор, который будет использоваться.
    /// @param aspect соотношение сторон.
    /// @param fov вертикальное поле зрения.
    /// @param near расстояние ближней плоскости отсечения.
    /// @param far расстояние дальней плоскости отсечения.
    void Create(const FVec3& position, const FVec3& forward, const FVec3& right, const FVec3& up, f32 aspect, f32 fov, f32 near, f32 far);

    /// @brief Указывает, пересекает ли усеченная пирамида сферу, построенную через центр и радиус, (или содержит ее).
    /// @param center постоянная ссылка на позицию, представляющую центр сферы.
    /// @param radIus Радиус сферы.
    /// @return true, если сфера пересекается или содержится в усеченной пирамиде; в противном случае false.
    bool IntersectsSphere(const FVec3& center, f32 radius);

    /// @brief Указывает, пересекает ли frustum f выровненный по оси ограничивающий прямоугольник, созданный с помощью center и extends.
    /// @param center постоянная ссылка на позицию, представляющую центр выровненного по оси ограничивающего прямоугольника.
    /// @param extents Половинные размеры выровненного по оси ограничивающего прямоугольника.
    /// @return true, если выровненный по оси ограничивающий прямоугольник пересекается или содержится в frustum; в противном случае false.
    bool IntersectsAABB(const FVec3& center, const FVec3& extents);
};
